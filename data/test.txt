最近，在数据科学和人工智能应用中，迫切需要管理高维矢量数据。非结构化数据和机器学习（ML）的激增推动了这一趋势，其中ML模型通常将非结构化数据转换为用于数据分析的特征向量，例如产品推荐。用于管理矢量数据的现有系统和算法具有两个限制：（1） 在处理大规模和动态矢量数据时，它们会引发严重的性能问题；（2） 它们提供的功能有限，无法满足多功能应用程序的要求本文介绍了Milvus，一个专门构建的数据管理系统，用于有效管理大规模矢量数据。1.介绍在Zilliz，我们经历了各种客户对在许多数据科学和人工智能应用中管理大规模高维矢量数据（从10维到1000维不等）的日益增长的需求。这主要是由于两种趋势。第一个是由于智能手机、物联网设备和社交媒体应用程序的普及，图像、视频、文本、医疗数据和住房数据等非结构化数据呈爆炸式增长。根据IDC的数据，到2025年，80%的数据将是非结构化的。第二个趋势是机器学习的快速发展，它可以有效地将非结构化数据转换为用于数据分析的学习特征向量特别是，推荐系统中最近流行的一种方法被称为向量嵌入，它将项目转换为特征向量（如item2vec[11]、word2vec[52]、doc2vec[37]、graph2vec[26]），并通过查找类似向量提供推荐[13，15，25，51]。例如，YouTube将视频嵌入到向量中[15]；Airbnb用矢量建模房屋[25]；生物科学家使用载体描述药物化合物的分子结构信息[13，51]。除此之外，图像和文本也是由向量表示的自然集合[8，53]。这些应用程序对设计可扩展矢量数据管理系统提出了独特的要求和挑战。其中包括：（1）不仅需要支持对大规模矢量数据的快速查询处理，还需要支持对动态矢量数据的有效处理（如插入和删除）。例如，Youtube每分钟上传500小时用户生成的视频，同时提供实时推荐。（2） 除了简单的向量相似性搜索之外，还需要提供高级查询处理，如属性过滤和多向量查询处理。这里的属性过滤是只搜索满足给定过滤条件的向量，这在电子商务应用中很有用，例如：找到与给定图像向量相似的T恤衫，其成本也低于100美元。
并且多向量查询处理每个对象被多个向量描述的场景，例如：在许多计算机视觉应用中使用人脸向量和姿势向量对人进行轮廓分析现有的矢量数据管理工作主要集中在矢量相似性搜索[14，20，22，33，35，39，45，46，48，49，57，65，68],但由于性能差（在大规模和动态矢量数据上）和功能有限，它们无法满足上述要求.（例如，无法支持属性过滤和多向量查询），以支持通用数据科学和人工智能应用。更具体地说，我们将现有作品分为两类：算法和系统.对于矢量相似性搜索的算法工作,例如：[20, 22, 33, 45, 46, 48, 49, 57],连同它们的开源实现库（例如Facebook Faiss和Microsoft SPTAG），有一些限制。（1） 它们是算法和库，而不是管理矢量数据的完整系统。它们不能很好地处理大量数据，因为它们假设所有数据和索引都存储在主要内存中，并且不能跨越多台机器。（2） 这些工作通常假设数据一旦进入系统就会是静态的，并且在确保快速实时搜索的同时无法轻松处理动态数据（3） 它们不支持高级查询处理。（4） 这些工作并没有针对具有CPU和GPU的异构计算架构进行优化。对于矢量相似性搜索上的系统工作，例如，Alibaba AnalyticDB-V 和 Alibaba PASE (PostgreSQL)。它们遵循”one-size-fits-all“的方法，通过添加一个名为“vector column”的表列来存储向量，从而扩展关系数据库以支持向量数据。然而，这些系统并不是专门用于管理矢量数据的，它们也没有将矢量视为第一类的工作。（1） 优化器和存储引擎等传统数据库组件阻止对矢量进行微调优化，例如查询优化器错过了最佳利用CPU和GPU处理矢量数据的重要机会。（2） 它们不支持高级查询处理，例如多向量查询。另一个相关的系统是Vearch，它是为矢量搜索而设计的。但Vearch在大规模数据上并不高效。实验（图8和图15）表明，本文介绍的系统Milvus比Vearch快6.4×~47.0×。
此外，Vearch不支持多向量查询处理。本文介绍了Milvus，一个专门构建的数据管理系统，用于有效存储和搜索大规模矢量数据，用于数据科学和人工智能应用。它是一个用于高维向量的专用系统，遵循“one-size not-fits-all ”的设计实践，而不是将关系数据库推广到支持向量.Milvus提供了许多应用程序接口（包括Python/Java/Go/C++和RESTful API中的SDK），应用程序可以轻松使用这些接口.Milvus针对具有现代CPU和GPU（多个GPU设备）的异构计算架构进行了高度调整，以获得最佳效率.它支持多种查询类型，如具有各种相似性函数的向量相似性搜索、属性过滤和多向量查询处理。它提供了不同类型的索引（例如，基于量化的索引和基于图的索引），并开发了一个可扩展的接口，可以轻松地将新索引合并到系统中。Milvus通过基于LSM的结构管理动态矢量数据（例如插入和删除），同时提供具有快照隔离的一致实时搜索。Milvus也是一个跨多个节点部署的分布式数据管理系统，以实现可扩展性和可用性。上表突出了Milvus和其他系统之间的主要差异在实现方面，Milvus建立在FacebookFaiss之上，这是一个用于向量相似性搜索的开源C++库。但Milvus显著增强了Faiss，提高了性能（例如，在第3节中优化异构计算平台，在第2.3节中高效支持动态数据管理，在第5.3节中支持分布式查询处理），增强了功能（例如，第4节中的属性过滤和多向量查询处理），以及更好的可用性（例如，第2.1节中的应用程序接口），以成为一个全面易用的矢量数据管理系统。2.SYSTEM DESIGN在本节中，我们对Milvus进行了概述。图1显示了Milvus的体系结构，它包含三个主要组件：查询引擎、GPU引擎和存储引擎。查询引擎支持对矢量数据进行高效的查询处理，并通过减少缓存未命中和利用SIMD指令为现代CPU进行了优化。GPU引擎是一个协同处理引擎，它以巨大的并行性提高性能。它还支持多个GPU设备以提高效率。存储引擎实现了数据的持久性，并结合了用于动态数据管理的基于LSM的结构。它在各种文件系统（包括本地文件系统、AmazonS3和HDFS）上运行，内存中有一个缓冲池2.1 查询处理我们首先介绍了Milvus中使用的实体的概念，然后解释了查询类型、相似函数和应用程序接口。
Entity为了最好地捕捉多功能数据科学和人工智能应用，Milvus支持对矢量数据和非矢量数据的查询处理。我们对实体一词的定义如下，以将两者结合起来。Milvus中的每个实体都被描述为一个或多个向量和可选的一些数字属性（非向量数据）。例如，在图像搜索应用程序中，除了可能的他/她的照片的多个机器学习特征向量（例如，描述正面、侧面或姿势）之外，数字属性还可以表示人的年龄和身高。在当前版本的Milvus中，我们只支持从许多应用程序中观察到的数字属性（2x已支持字符串）。
但在未来，我们计划支持具有索引的分类属性，如反向列表或位图